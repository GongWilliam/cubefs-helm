{{- if .Values.component.blobstore_blobnode }}
{{- $envAll := . }}

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: blobnode
  labels:
    app.kubernetes.io/name: cubefs
    app.kubernetes.io/component: blobstore-blobnode
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: cubefs
      app.kubernetes.io/component: blobstore-blobnode
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cubefs
        app.kubernetes.io/component: blobstore-blobnode
    spec:
      {{- with .Values.blobstore_blobnode.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 2 }}
      {{- end }}
      {{- with .Values.blobstore_blobnode.tolerations }}
          tolerations:
      {{ toYaml . | indent 2 }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: init-check
          image: {{ $.Values.image.blobstore }}
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "/cfs/bin/check_clustermgr.sh" ]
          env:
            - name: CLUSTERMGR_SERVICE
              value: clustermgr-0.clustermgr-service{{ $.Values.blobstore_clustermgr.bind_addr }}
      containers:
        - name: blobnode
          image: {{ $.Values.image.blobstore }}
          command: [ "/bin/bash", "/cfs/bin/start_blobnode.sh" ]
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTERMGR_REPLICAS
              value: {{ $.Values.blobstore_clustermgr.replicas | quote }}
            - name: CLUSTERMGR_BIND_ADDR
              value: {{ $.Values.blobstore_clustermgr.bind_addr | quote }}
            - name: BIND_ADDR
              value: {{ $.Values.blobstore_blobnode.bind_addr | quote }}
            - name: CLUSTER_ID
              value: {{ $.Values.blobstore_blobnode.cluster_id | quote }}
            - name: IDC
              value: {{ $.Values.blobstore_blobnode.idc | quote }}
            - name: RACK
              value: {{ $.Values.blobstore_blobnode.rack | quote }}
            - name: LOG_LEVEL
              value: {{ $.Values.blobstore_blobnode.log_level | quote }}
            - name: DISK_RESERVED
              value: {{ $.Values.blobstore_blobnode.disk_reserved | quote }}
            - name: COMPACT_RESERVED
              value: {{ $.Values.blobstore_blobnode.compact_reserved | quote }}
{{- range .Values.blobstore_blobnode.disks }}
{{ tuple $envAll . | include "helm-toolkit.utils.blobstore_blobnode.disks.envs" | indent 12}}
{{- end }}
          ports:
            - name: port
              containerPort: {{ $.Values.blobstore_blobnode.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /cfs/bin/check_blobnode_alive.sh
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: log
              mountPath: /cfs/log
{{- range .Values.blobstore_blobnode.disks }}
{{ tuple $envAll . | include "helm-toolkit.utils.blobstore_blobnode.disks.volumes_mount" | indent 12}}
{{- end }}
      volumes:
        - name: log
          hostPath:
            path: {{ $.Values.blobstore_blobnode.log_path | quote }}
            type: DirectoryOrCreate
{{- range .Values.blobstore_blobnode.disks }}
{{ tuple $envAll . | include "helm-toolkit.utils.blobstore_blobnode.disks.volumes" | indent 8}}
{{- end }}
{{ end }}